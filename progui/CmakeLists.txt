# progui

# Defines the project name, version, and description.
project(
  progui
  VERSION 0.0.1
  DESCRIPTION "ProBot GUI Assistance"
)

# Enables support for the C language.
enable_language(C)
# Enables support for the C++ language.
enable_language(CXX)

# Adds the 'cmake' directory in the project root to the CMake module search path.
list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")

# Sets up compile and link options, possibly defined elsewhere (e.g., AVX, extra flags).
set(MUJOCO_SAMPLE_COMPILE_OPTIONS "${AVX_COMPILE_OPTIONS}" "${EXTRA_COMPILE_OPTIONS}")
set(MUJOCO_SAMPLE_LINK_OPTIONS "${EXTRA_LINK_OPTIONS}")

# If hardening is enabled, adjust compile and link options for security.
if(MUJOCO_HARDEN)
  if(WIN32)
    # On Windows, enable address space layout randomization.
    set(MUJOCO_SAMPLE_LINK_OPTIONS "${MUJOCO_SAMPLE_LINK_OPTIONS}" -Wl,/DYNAMICBASE)
  else()
    # On non-Windows, enable position-independent executables.
    set(MUJOCO_SAMPLE_COMPILE_OPTIONS "${MUJOCO_SAMPLE_COMPILE_OPTIONS}" -fPIE)
    if(APPLE)
      # On macOS, set linker option for PIE.
      set(MUJOCO_SAMPLE_LINK_OPTIONS "${MUJOCO_SAMPLE_LINK_OPTIONS}" -Wl,-pie)
    else()
      # On other platforms, set linker option for PIE.
      set(MUJOCO_SAMPLE_LINK_OPTIONS "${MUJOCO_SAMPLE_LINK_OPTIONS}" -pie)
    endif()
  endif()
endif()

# Defines an executable target named 'ProGUI' built from 'ProGUI.cc'.
add_executable(ProGUI ProGUI.cc)

# Applies the previously set compile options to the 'ProGUI' target.
target_compile_options(ProGUI PUBLIC ${MUJOCO_SAMPLE_COMPILE_OPTIONS})


find_package(Threads REQUIRED) 
# Links the 'ProGUI' target with the MuJoCo library, GLFW, and threading support.
target_link_libraries(
  ProGUI
  mujoco::mujoco
  glfw
  Threads::Threads
)

# Applies the previously set link options to the 'ProGUI' target.
target_link_options(ProGUI PRIVATE ${MUJOCO_SAMPLE_LINK_OPTIONS})
# Set ProGUI as the default startup project in Visual Studio
set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT ProGUI)