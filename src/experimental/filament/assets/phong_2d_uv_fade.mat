// Copyright 2025 DeepMind Technologies Limited
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

material {
    name : phong_2d_uv,
    shadingModel : specularGlossiness,
    culling : none,
    flipUV : false,
    blending: fade,
    parameters : [
        { type : float4, name : BaseColorFactor },
        { type : float, name : SpecularFactor },
        { type : float, name : GlossinessFactor },
        { type : float, name : EmissiveFactor },
        { type : sampler2d, name : BaseColor }
    ],
    requires : [
        uv0
    ],
}

fragment {
  void material(inout MaterialInputs material) {
    vec2 uv = getUV0();

    prepareMaterial(material);
    material.baseColor     = materialParams.BaseColorFactor;
    material.baseColor     *= texture(materialParams_BaseColor, uv);
    material.specularColor = vec3(materialParams.SpecularFactor);
    material.glossiness    = materialParams.GlossinessFactor;
    material.emissive      = vec4(materialParams.EmissiveFactor);
  }
}
