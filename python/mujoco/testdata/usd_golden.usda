#usda 1.0
(
    defaultPrim = "World"
    doc = """Generated from Composed Stage of root layer 
"""
    endTimeCode = 1
    startTimeCode = 0
    timeCodesPerSecond = 24
    upAxis = "Z"
)

def Xform "World"
{
    def Xform "Light_Xform_0"
    {
        double3 xformOp:translate
        uniform token[] xformOpOrder = ["xformOp:translate"]

        def SphereLight "Light_0"
        {
            bool inputs:normalize = 1
            float inputs:radius = 0.3
            bool treatAsPoint = 0
        }
    }

    def Xform "CubeMesh_Xform_white_box"
    {
        matrix4d xformOp:transform.timeSamples = {
            0: ( (0, 0, 0, 0), (0, 0, 0, 0), (0, 0, 0, 0), (0, 0, 0, 1) ),
        }
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CubeMesh_white_box" (
            apiSchemas = ["MaterialBindingAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [4, 7, 5, 4, 6, 7, 0, 2, 4, 2, 6, 4, 0, 1, 2, 1, 3, 2, 1, 5, 7, 1, 7, 3, 2, 3, 7, 2, 7, 6, 0, 4, 1, 1, 4, 5]
            rel material:binding = </World/_materials/Material_white_box>
            point3f[] points = [(-1, -1, -1), (1, -1, -1), (-1, -1, 1), (1, -1, 1), (-1, 1, -1), (1, 1, -1), (-1, 1, 1), (1, 1, 1)]
            texCoord2f[] primvars:UVMap = [] (
                interpolation = "faceVarying"
            )
            int[] primvars:UVMap:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
            uniform token subdivisionScheme = "none"
            token visibility.timeSamples = {
                0: "inherited",
            }
        }
    }

    def "_materials"
    {
        def Material "Material_white_box"
        {
            token outputs:surface.connect = </World/_materials/Material_white_box/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:metallic = 0.5
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                token outputs:surface
            }
        }
    }
}

